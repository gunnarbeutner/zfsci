#!/usr/bin/env python
import sys
import os
import shutil
from tasklib import Utility, JobConfig
from partlib import PartitionBuilder

os.chdir(Utility.get_scripts_dir())

if len(sys.argv) < 2:
	print "Syntax: %s <configfile>" % (sys.argv[0])
	sys.exit(1)

configfile = sys.argv[1]

if not os.path.isfile(configfile):
	print 'Config file "%s" does not exist.' % (configfile)
	sys.exit(1)

JobConfig.load(configfile)

PartitionBuilder.unmount_partitions()
PartitionBuilder.setup_partitions()
PartitionBuilder.mount_partitions()

distimage = '/var/lib/zfsci-data/dists/%s.tar.gz' % (JobConfig.get_input('distribution'))

if os.system("tar Cxfzv /mnt %s" % (distimage)) != 0:
	print "Could not extract distribution image."
	sys.exit(1)

# install kernel
kerneldir = "%s/kernels/%s/" % (Utility.get_persistent_dir(), JobConfig.get_input('kernel-version'))

if os.system("dpkg -i %s/*_all* %s/*_amd64*" % (kerneldir, kerneldir)) != 0:
	print "Could not install kernel."
	sys.exit(1)

if os.system("cp -a /boot/* /mnt/boot/") != 0 or \
		os.system("cp -a /lib/modules/* /mnt/lib/modules/") != 0 or \
		os.system("cp -a /usr/src/* /mnt/usr/src/") != 0 or \
		os.system("cp -P /vmlinuz /mnt/") != 0 or \
		os.system("cp -P /initrd.img /mnt/") != 0:
	print "Could not copy kernel to chroot."
	sys.exit(1)

# mark tests as 'in progress'
open("/mnt/.zfsci", "w").close()

fp = open("/mnt/etc/hostname", "w")
fp.write("zfsci-node")
fp.close()

config = Utility.get_zfsci_config()

fp = open("/mnt/etc/fstab", "w")
fp.write("""%s	/			ext3	defaults	0	0
%s	none			swap	sw		0	0
%s	/var/lib/zfsci-data	nfs	ro		0	0
""" % \
(PartitionBuilder.get_rootpart(), PartitionBuilder.get_swappart(), config['nfs_persistent_path']))
fp.close()

# TODO: set root password

fp = open("/mnt/etc/rc.local", "w")
fp.write("""#!/bin/sh
[ -e /.zfsci ] && /opt/zfsci/zfsci-run-stage /var/lib/zfsci-data/tasks test /var/lib/zfsci/job.json

/opt/zfsci/zfsci-watchdog 120
reboot

exit 0""")
fp.close()

os.chmod("/mnt/etc/rc.local", 0755)

sys.exit(0)
